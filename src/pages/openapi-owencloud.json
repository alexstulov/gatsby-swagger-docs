{
  "openapi": "3.0.1",
  "info": {
    "title": "Owencloud",
    "description": "API предназначено для доступа к имеющимся в системе данным. В качестве основного формата вывода применяется JSON, однако клиент также может запросить данные в формате XML указав заголовок Accept: application/xml. Для аутентификации пользователей в API применяются access tokens, передаваемые в заголовке согласно спецификации OAuth 2. На начальном этапе эксплуатации API для получения токена используется отдельный метод API. Требуемое действие определяется через HTTP Verb POST, семантика действия описывается в документации. Не описанные действия считаются невалидными. Результат выполнения каждого метода возвращается в HTTP Status Code, в случае ошибки также выдается текстовое описание случившейся ошибки. Дополнительные входные параметры метода передаются в теле запроса (в таком случае оно должно быть валидным JSON-объектом). Структура объекта описывается отдельно для каждого метода.",
    "contact": {
      "name": "Owen support center",
      "email": "support@owen.ru"
    },
    "license": {
      "name": "License agreement",
      "url": "https://web.owencloud.ru/site/agreement"
    },
    "version": "beta"
  },
  "externalDocs": {
    "description": "Find out more about Owencloud",
    "url": "https://ftp.owen.ru/OwenCloud/01_Docs/rp_owencloud.pdf"
  },
  "servers": [
    {
      "url": "https://api.owencloud.ru/"
    }
  ],
  "tags": [
    {
      "name": "device",
      "description": "Everything about your devices"
    },
    {
      "name": "user",
      "description": "Operations about user"
    }
  ],
  "paths": {
    "/device": {
      "put": {
        "tags": [
          "device"
        ],
        "summary": "Update an existing device",
        "operationId": "updateDevice",
        "requestBody": {
          "description": "Device object that needs to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Device"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Device"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "Device not found",
            "content": {}
          },
          "405": {
            "description": "Validation exception",
            "content": {}
          }
        },
        "security": [
          {
            "owencloud_auth": [
              "write:devices",
              "read:devices"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "device"
        ],
        "summary": "Add a new device",
        "operationId": "addDevice",
        "requestBody": {
          "description": "Device object that needs to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Device"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/Device"
              }
            }
          },
          "required": true
        },
        "responses": {
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        },
        "security": [
          {
            "owencloud_auth": [
              "write:devices",
              "read:devices"
            ]
          }
        ]
      }
    },
    "/device/findByIdentifier": {
      "get": {
        "tags": [
          "device"
        ],
        "summary": "Finds Devices by data fetcher identifier",
        "description": "Multiple status values can be provided with comma separated strings",
        "operationId": "findDeviceByIdentifier",
        "parameters": [
          {
            "name": "identifier",
            "in": "query",
            "description": "Datafetcher identifier",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "items": {
                "type": "string",
                "default": ""
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Device"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Device"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "content": {}
          }
        },
        "security": [
          {
            "owencloud_auth": [
              "write:devices",
              "read:devices"
            ]
          }
        ]
      }
    },
    "/device/types": {
      "get": {
        "tags": [
          "device"
        ],
        "summary": "Get device types list",
        "description": "List of device types formed likeasdf",
        "operationId": "deviceTypesList",
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "description": "Tags to filter by",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Device"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Device"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid tag value",
            "content": {}
          }
        },
        "deprecated": true,
        "security": [
          {
            "owencloud_auth": [
              "write:devices",
              "read:devices"
            ]
          }
        ]
      }
    },
    "/device/{deviceId}": {
      "get": {
        "tags": [
          "device"
        ],
        "summary": "Find device by ID",
        "description": "Returns a single device",
        "operationId": "getDeviceById",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "ID of device to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Device"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "Device not found",
            "content": {}
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "post": {
        "tags": [
          "device"
        ],
        "summary": "Updates a device in the store with form data",
        "operationId": "updateDeviceWithForm",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "ID of device that needs to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Updated name of the device"
                  },
                  "status": {
                    "type": "string",
                    "description": "Updated status of the device"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "405": {
            "description": "Invalid input",
            "content": {}
          }
        },
        "security": [
          {
            "owencloud_auth": [
              "write:devices",
              "read:devices"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "device"
        ],
        "summary": "Deletes a device",
        "operationId": "deleteDevice",
        "parameters": [
          {
            "name": "api_key",
            "in": "header",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deviceId",
            "in": "path",
            "description": "Device id to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied",
            "content": {}
          },
          "404": {
            "description": "Device not found",
            "content": {}
          }
        },
        "security": [
          {
            "owencloud_auth": [
              "write:devices",
              "read:devices"
            ]
          }
        ]
      }
    },
    "/user": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Create user",
        "description": "Only logged in admin can create another user.",
        "operationId": "createUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {}
          }
        }
      }
    },
    "/user/createWithArray": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Creates list of users with given input array",
        "operationId": "createUsersWithArrayInput",
        "requestBody": {
          "description": "List of user object",
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {}
          }
        }
      }
    },
    "/user/createWithList": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "Creates list of users with given input array",
        "operationId": "createUsersWithListInput",
        "requestBody": {
          "description": "List of user object",
          "content": {
            "*/*": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {}
          }
        }
      }
    },
    "/user/login": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs user into the system",
        "operationId": "loginUser",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "description": "The user name for login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied",
            "content": {}
          }
        }
      }
    },
    "/user/logout": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Logs out current logged in user session",
        "operationId": "logoutUser",
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {}
          }
        }
      }
    },
    "/user/{username}": {
      "get": {
        "tags": [
          "user"
        ],
        "summary": "Get user by user name",
        "operationId": "getUserByName",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be fetched. Use user1 for testing. ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username supplied",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      },
      "put": {
        "tags": [
          "user"
        ],
        "summary": "Updated user",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Updated user object",
          "content": {
            "*/*": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid user supplied",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Delete user",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid username supplied",
            "content": {}
          },
          "404": {
            "description": "User not found",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Category"
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          }
        },
        "xml": {
          "name": "Tag"
        }
      },
      "Device": {
        "required": [
          "name",
          "identifier"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          },
          "name": {
            "type": "string",
            "example": "TRM225"
          },
          "identifier": {
            "type": "string",
            "xml": {
              "name": "photoUrl",
              "wrapped": true
            },
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "xml": {
              "name": "tag",
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "status": {
            "type": "string",
            "description": "device status",
            "enum": [
              "available",
              "pending",
              "sold"
            ]
          }
        },
        "xml": {
          "name": "Device"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "userStatus": {
            "type": "integer",
            "description": "User Status",
            "format": "int32"
          }
        },
        "xml": {
          "name": "User"
        }
      }
    },
    "securitySchemes": {
      "owencloud_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://web.owencloud.ru/auth/open",
            "scopes": {
              "write:devices": "modify devices in your account",
              "read:devices": "read your devices"
            }
          }
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  }
}
